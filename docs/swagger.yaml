basePath: /
definitions:
  dto.BillCreate:
    properties:
      date:
        type: string
      groupID:
        type: string
      items:
        items:
          $ref: '#/definitions/dto.ItemInput'
        type: array
      name:
        type: string
      ownerID:
        type: string
    type: object
  dto.BillDetailedOutput:
    properties:
      balance:
        additionalProperties:
          type: number
        description: include balance only if balance is set
        type: object
      date:
        type: string
      groupID:
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/dto.ItemOutput'
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/dto.UserCoreOutput'
      updatedAt:
        type: string
    type: object
  dto.BillUpdate:
    properties:
      date:
        type: string
      isViewed:
        type: boolean
      items:
        items:
          $ref: '#/definitions/dto.ItemInput'
        type: array
      name:
        type: string
      updatedAt:
        type: string
    type: object
  dto.ContributionInput:
    properties:
      contribution:
        items:
          $ref: '#/definitions/dto.HasContributed'
        type: array
    type: object
  dto.GeneralResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  dto.GroupDetailedOutput:
    properties:
      balance:
        additionalProperties:
          type: number
        description: include balance only if balance is set
        type: object
      bills:
        items:
          $ref: '#/definitions/dto.BillDetailedOutput'
        type: array
      id:
        type: string
      invitationID:
        description: include invitationID only if invitationID is set
        type: string
      members:
        items:
          $ref: '#/definitions/dto.UserCoreOutput'
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/dto.UserCoreOutput'
    type: object
  dto.GroupInput:
    properties:
      name:
        type: string
      ownerID:
        type: string
    type: object
  dto.GroupTransactionOutput:
    properties:
      date:
        type: string
      groupId:
        type: string
      groupName:
        type: string
      id:
        type: string
      transactions:
        items:
          $ref: '#/definitions/dto.TransactionOutput'
        type: array
    type: object
  dto.HasContributed:
    properties:
      contributed:
        type: boolean
      itemID:
        type: string
    type: object
  dto.ItemInput:
    properties:
      contributorIDs:
        items:
          type: string
        type: array
      name:
        type: string
      price:
        type: number
    type: object
  dto.ItemOutput:
    properties:
      billId:
        type: string
      contributors:
        items:
          $ref: '#/definitions/dto.UserCoreOutput'
        type: array
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  dto.TransactionOutput:
    properties:
      amount:
        type: number
      creditor:
        $ref: '#/definitions/dto.UserCoreOutput'
      debtor:
        $ref: '#/definitions/dto.UserCoreOutput'
    type: object
  dto.UserCoreOutput:
    properties:
      email:
        type: string
      id:
        type: string
      profileImgPath:
        type: string
      username:
        type: string
    type: object
  dto.UserInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Split The Bill API
  version: "1.0"
paths:
  /api/bill:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: query
        name: userId
        required: true
        type: string
      - description: Is Unseen
        in: query
        name: isUnseen
        type: boolean
      - description: Is Owner
        in: query
        name: isOwner
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.BillDetailedOutput'
                  type: array
              type: object
      summary: Get All Bills by User
      tags:
      - Bill
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BillCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.BillDetailedOutput'
              type: object
      summary: Create Bill
      tags:
      - Bill
  /api/bill/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bill ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponse'
      summary: Delete Bill
      tags:
      - Bill
    get:
      consumes:
      - application/json
      parameters:
      - description: Bill ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.BillDetailedOutput'
              type: object
      summary: Get Bill by ID
      tags:
      - Bill
    put:
      consumes:
      - application/json
      parameters:
      - description: Bill ID
        in: path
        name: id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BillUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.BillDetailedOutput'
              type: object
      summary: Update Bill
      tags:
      - Bill
  /api/bill/{id}/contribution:
    put:
      consumes:
      - application/json
      parameters:
      - description: Bill ID
        in: path
        name: id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ContributionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponse'
      summary: Update Item Contribution
      tags:
      - Bill
  /api/group:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: query
        name: userId
        type: string
      - description: Invitation ID
        in: query
        name: invitationId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupDetailedOutput'
              type: object
      summary: Get Groups by User/Invitation
      tags:
      - Group
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.GroupInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupDetailedOutput'
              type: object
      summary: Create Group
      tags:
      - Group
  /api/group/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponse'
      summary: Delete Group
      tags:
      - Group
    get:
      consumes:
      - application/json
      parameters:
      - description: Group Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupDetailedOutput'
              type: object
      summary: Get Group by ID
      tags:
      - Group
    put:
      consumes:
      - application/json
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.GroupInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupDetailedOutput'
              type: object
      summary: Update Group
      tags:
      - Group
  /api/group/{id}/transaction:
    post:
      consumes:
      - application/json
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupTransactionOutput'
              type: object
      summary: Create Group Transaction & Clear Group
      tags:
      - Group
  /api/group/invitation/{id}/accept:
    post:
      consumes:
      - application/json
      parameters:
      - description: Invitation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponse'
      summary: Accept Group Invitation
      tags:
      - Group
  /api/group/transaction:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID - Retrieve transactions for groups where user is a member
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.GroupTransactionOutput'
                  type: array
              type: object
      summary: Get Group Transactions For All Groups
      tags:
      - Group
  /api/user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserCoreOutput'
                  type: array
              type: object
      summary: Get all Users
      tags:
      - User
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCoreOutput'
              type: object
      summary: Register User
      tags:
      - User
  /api/user/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponse'
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCoreOutput'
              type: object
      summary: Get User by ID
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - in: formData
        name: username
        type: string
      - description: User Image
        in: formData
        name: image
        type: file
      produces:
      - multipart/form-data
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponse'
      summary: Update User
      tags:
      - User
  /api/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCoreOutput'
              type: object
      summary: Login User
      tags:
      - User
  /api/user/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponse'
      summary: Logout User
      tags:
      - User
swagger: "2.0"
