basePath: /
definitions:
  dto.BillDetailedOutputDTO:
    properties:
      date:
        type: string
      groupID:
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/dto.ItemOutputDTO'
        type: array
      name:
        type: string
      ownerID:
        type: string
    type: object
  dto.BillInputDTO:
    properties:
      date:
        type: string
      groupID:
        type: string
      items:
        items:
          $ref: '#/definitions/dto.ItemInputDTO'
        type: array
      name:
        type: string
      ownerID:
        type: string
    type: object
  dto.CredentialsInputDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.GeneralResponseDTO:
    properties:
      data: {}
      message:
        type: string
    type: object
  dto.GroupCoreOutputDTO:
    properties:
      id:
        type: string
      members:
        items:
          $ref: '#/definitions/dto.UserCoreOutputDTO'
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/dto.UserCoreOutputDTO'
    type: object
  dto.GroupDetailedOutputDTO:
    properties:
      bills:
        items:
          $ref: '#/definitions/dto.BillDetailedOutputDTO'
        type: array
      id:
        type: string
      members:
        items:
          $ref: '#/definitions/dto.UserCoreOutputDTO'
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/dto.UserCoreOutputDTO'
    type: object
  dto.GroupInputDTO:
    properties:
      name:
        type: string
      ownerID:
        type: string
    type: object
  dto.GroupInvitationInputDTO:
    properties:
      groupID:
        type: string
      inviteeIDs:
        items:
          type: string
        type: array
      issuerID:
        type: string
    type: object
  dto.GroupInvitationOutputDTO:
    properties:
      group:
        $ref: '#/definitions/dto.GroupCoreOutputDTO'
      invitationID:
        type: string
    type: object
  dto.InvitationResponseInputDTO:
    properties:
      isAccept:
        type: boolean
    type: object
  dto.ItemInputDTO:
    properties:
      billId:
        type: string
      contributorIDs:
        items:
          type: string
        type: array
      name:
        type: string
      price:
        type: number
    type: object
  dto.ItemOutputDTO:
    properties:
      billId:
        type: string
      contributorIDs:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  dto.UserCoreOutputDTO:
    properties:
      email:
        type: string
      id:
        type: string
    type: object
  dto.UserDetailedOutputDTO:
    properties:
      email:
        type: string
      groups:
        items:
          $ref: '#/definitions/dto.GroupCoreOutputDTO'
        type: array
      id:
        type: string
      invitationIDs:
        items:
          type: string
        type: array
    type: object
  dto.UserInputDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Split The Bill API
  version: "1.0"
paths:
  /api/bill:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BillInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.BillDetailedOutputDTO'
              type: object
      summary: Create Bill
      tags:
      - Bill
  /api/bill/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bill ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.BillDetailedOutputDTO'
              type: object
      summary: Get Bill by ID
      tags:
      - Bill
  /api/bill/item:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ItemInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.ItemOutputDTO'
              type: object
      summary: Add Item to Bill
      tags:
      - Bill
  /api/bill/item/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.ItemOutputDTO'
              type: object
      summary: Get Item by ID
      tags:
      - Bill
    put:
      consumes:
      - application/json
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ItemInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.ItemOutputDTO'
              type: object
      summary: Change Item
      tags:
      - Bill
  /api/group:
    get:
      consumes:
      - application/json
      parameters:
      - description: User Id
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupDetailedOutputDTO'
              type: object
      summary: Get Groups by User
      tags:
      - Group
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.GroupInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupDetailedOutputDTO'
              type: object
      summary: Create Group
      tags:
      - Group
  /api/group/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Group Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupDetailedOutputDTO'
              type: object
      summary: Get Group by ID
      tags:
      - Group
    put:
      consumes:
      - application/json
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.GroupInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupDetailedOutputDTO'
              type: object
      summary: Update Group
      tags:
      - Group
  /api/invitation:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.GroupInvitationInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupInvitationOutputDTO'
              type: object
      summary: Create Group Invitation
      tags:
      - Invitation
  /api/invitation/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Invitation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.GroupInvitationOutputDTO'
              type: object
      summary: Get Group Invitation By ID
      tags:
      - Invitation
  /api/invitation/{id}/response:
    post:
      consumes:
      - application/json
      parameters:
      - description: Invitation ID
        in: path
        name: id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.InvitationResponseInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponseDTO'
      summary: Accept or decline Group Invitation
      tags:
      - Invitation
  /api/invitation/user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.GroupInvitationOutputDTO'
                  type: array
              type: object
      summary: Get All Group Invitations From User
      tags:
      - Invitation
  /api/user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserDetailedOutputDTO'
                  type: array
              type: object
      summary: Get all Users
      tags:
      - User
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCoreOutputDTO'
              type: object
      summary: Register User
      tags:
      - User
  /api/user/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GeneralResponseDTO'
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserDetailedOutputDTO'
              type: object
      summary: Get detailed User data by ID
      tags:
      - User
  /api/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CredentialsInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.GeneralResponseDTO'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCoreOutputDTO'
              type: object
      summary: Login User
      tags:
      - User
swagger: "2.0"
